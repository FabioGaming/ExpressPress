// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SignupStrategies {
  GOOGLE
  DISCORD
}

model UserSignins {
  userId             String           @id @default(cuid()) @map("user_id")
  signupStrategyType SignupStrategies @map("signup_strategy_type")
  signupAccountId    String           @unique
  createdAt          DateTime         @default(now()) @map("created_at")
  modifiedAt         DateTime         @default(now()) @map("modified_at")
  refreshToken       String           @unique @map("refresh_token")
  linkedProfileId    String           @unique @map("linked_profile_id")
  linkedProfile      UserProfiles     @relation(fields: [linkedProfileId], references: [profileId])

  @@map("user_signins")
}

model UserProfiles {
  profileId          String       @id @default(cuid()) @map("profile_id")
  userName           String       @map("user_name")
  userSlug           String       @unique @map("user_slug")
  profileIconMediaId String       @map("profile_icon_media_id")
  createdAt          DateTime     @default(now()) @map("created_at")
  modifiedAt         DateTime     @default(now()) @map("modified_at")
  UserSignins        UserSignins?
  MediaData          MediaData[]  @relation(name: "UploadedMedia")

  @@map("user_profiles")
}

model MediaData {
  mediaId       String       @id @default(cuid()) @map("media_id")
  mimeType      String       @map("mime_type")
  fileData      Bytes        @map("file_data")
  authorId      String       @map("author_id")
  createdAt     DateTime     @default(now()) @map("created_at")
  fileSize      Int          @default(0) @map("file_size")
  AuthorProfile UserProfiles @relation(name: "UploadedMedia", fields: [authorId], references: [profileId])

  @@map("media_data")
}

model Blogs {
  blogId           String   @id @default(cuid()) @map("blog_id")
  authorId         String   @map("author_id")
  title            String   @map("blog_title")
  content          String   @map("blog_content")
  tags             String[] @map("blog_tags")
  thumbnailMediaId String   @map("blog_thumbnail_media_id")
  createdAt        DateTime @default(now()) @map("created_at")
  modifiedAt       DateTime @default(now()) @map("modified_time")

  @@map("blogs")
}
